package helpers;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import com.jacob.com.Dispatch;
import com.rational.test.ft.script.RationalTestScript;


import objectmap.objectmap;
import resources.axe.Test2Helper;
import com.jacob.activeX.ActiveXComponent;
import com.jacob.com.Variant;
import com.jacob.com.Dispatch;
import com.rational.test.ft.*;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.value.*;
import com.rational.test.ft.vp.*;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
import helpers.AxeMain;

/**
 * Description   : Super class for script helper
 * 
 * @author Jaco
 * @since  November 15, 2011
 */
public abstract class TestHarnessAPILib extends RationalTestScript
{

	 public int getTheCount(){
		 int totalPersons = 0;
  	   try {
		    	
             System.out.println("start 4...");
		    	
    DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
    DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
    Document doc = null;               

    try {
     BufferedWriter out = new BufferedWriter(new FileWriter("test.txt"));
     Dispatch axe = null;
	out.write(Dispatch.get(axe , "Value").toString());                
     out.close();
     }
     catch (IOException e)
     {
        System.out.println(e.getMessage());
     }                
    try {
        doc = docBuilder.parse("test.txt");
        System.out.println("location:"+doc.getBaseURI());
    } catch (SAXException ex) {
         System.out.println(ex.getMessage());
    } catch (IOException ex) {
        System.out.println(ex.getMessage());
    }

    doc.getDocumentElement().normalize();
    System.out.println("Root element of the doc is " + doc.getDocumentElement().getNodeName());

    NodeList listOfPersons = doc.getElementsByTagName("item");
    totalPersons = listOfPersons.getLength();
    System.out.println("Total no of items : " + totalPersons);
    
} catch (ParserConfigurationException ex) {
    System.out.println(ex.getMessage());
};  
return totalPersons;

     }
	
}
